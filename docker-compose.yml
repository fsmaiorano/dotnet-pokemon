version: "3.9"
networks:
  docker_network:
    driver: bridge

services:
  webui:
    container_name: pokemon-webui
    links:
      - api
    build:
      context: ./src/WebUI
      dockerfile: ./Dockerfile
    depends_on:
      - api
    ports:
      - "4200:80"
    networks:
      - docker_network
  api:
    container_name: pokemon-api
    build:
      context: .
      dockerfile: ./src/Api/Dockerfile
    links:
      - db
    ports:
      - "5268:8080"
    environment:
      - DOTNET_VERSION=8.0.0
      - DOTNET_DOWNLOAD_URL=https://dotnetcli.azureedge.net/dotnet/Runtime/8.0.0/dotnet-runtime-8.0.0-linux-x64.tar.gz
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - DockerCompose=true
      - DockerCompose_DefaultConnection="User ID=postgres;Password=postgres;Server=db;Port=5432;Database=pokemon_database;"
    depends_on:
      db:
        condition: service_healthy
    restart: always
    networks:
      - docker_network
  db:
    container_name: pokemon-database
    image: postgres:latest
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 128M
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pokemon_database
      # PGDATA: /data/postgres
    volumes:
      - ./data/postgres:/data/postgres
      - ./data/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - docker_network
